
#include <iomanip>
#include <iostream>
#include <Windows.h>
#include <string>
#include <stack>
#include <vector>
#include <map>
#include <fstream>
#include "CountFrequency.h"

template< typename T>
class make_vector{
	std::vector< T> data_;
public:
	make_vector<T>& operator << (const T& t){
		data_.push_back( t);
		return *this;
	}
	operator std::vector<T>&& (){
		return std::move(data_);
	}
};
/*Loading dataset generated by the IBM generator
**input: filestring
**output: CountFrequency
**output: itemsetMap
***/
void load(std::string path, CountFrequency& itemFreq, itemsetMap& itMap);
void load(const std::vector< std::vector<int> >& vec, CountFrequency& itemFreq, itemsetMap& itMap);
void convertToCSV(std::string path);
void convertToArff(std::string path, std::string relationName);


#ifndef _TIC_TOC_H_
#define _TIC_TOC_H_
/*Timer*/
static LARGE_INTEGER frequency = {0};
static std::stack<LARGE_INTEGER> my_tictoc_stack;
void tic();
void toc(std::string info);

#endif

/*Convert int to string*/
#ifndef _CONVERT_TO_STRING_
#define _CONVERT_TO_STRING_
/*****************************************************************************************
1.  Func Name:  
ConvertToString  Global Funct
2.  Param    :  
template_type value
3.  RetValue :
string := convert any data_type to string
4.  Explanation:
將任意數字轉換成string
*****************************************************************************************/
template<class T>
std::string ConvertToString(T value);

#define int2str ConvertToString<int>;
#define float2str ConvertToString<float>;

#endif

